<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= csrf_meta_tag %>
    <%= javascript_importmap_tags %>
    <script>
      document.addEventListener("DOMContentLoaded", async function() {
        await import("lib/shopify_app")

        var setSessionToken = async function() {
          var SessionToken = window["app-bridge"].actions.SessionToken
          var app = window.app;

          app.dispatch(
            SessionToken.request(),
          );

          // Save a session token for future requests
          window.sessionToken = await new Promise((resolve) => {
            app.subscribe(SessionToken.Action.RESPOND, (data) => {
              resolve(data.sessionToken || "");
            });
          });
        };

        await setSessionToken();
        setInterval(() => { setSessionToken(); }, 59000);

        const DEFAULT_AUDITS_FILTER = { status: null };
        const DEFAULT_AUDITS_PAGE = 1;

        window.auditsPage = DEFAULT_AUDITS_PAGE;
        window.auditsFilter = DEFAULT_AUDITS_FILTER;

        var bindAuditPagination = function() {
          $("#audits .pagination-link").click(function(e) {
            e.preventDefault();
            e.stopPropagation();

            window.auditsPage = $(this).html();
            var url = $(this).attr("href");

            fetchAudits(url);
          });
        };

        var stopAuditsPooling = function() {
          if (window.auditsPollingId !== undefined) {
            clearInterval(window.auditsPollingId);
            window.auditsPollingId = undefined;
          };
        };

        var startAuditsPooling = function() {
          window.auditsPollingId = setInterval(() => {
            var params = { page: window.auditsPage, status: window.auditsFilter.status }
            Object.keys(params).forEach(key => { if (params[key] === null) { delete params[key]; } });

            fetchAudits("/audits?" + $.param(params));
          }, 6000);
        }

        var bindAuditsFilterSubmit = function() {
          $("#audits_filter").on("submit", function(e) {
            e.preventDefault();
            e.stopPropagation();
            window.auditsPage = DEFAULT_AUDITS_PAGE;
            window.auditsFilter.status = $('#audits_filter #status option:selected').val();
            var url = "/audits?" + $(this).serialize();

            stopAuditsPooling();
            fetchAudits(url);
            startAuditsPooling();
          });
        };

        var clearAuditsFilter = function() {
          window.auditsFilter = DEFAULT_AUDITS_FILTER;
          window.auditsPage = DEFAULT_AUDITS_PAGE;

          stopAuditsPooling();
          fetchAudits(url);
          startAuditsPooling();
        };

        var fetchAudits = function(url = "/audits") {
          var headers = new Headers({ "Authorization": "Bearer " + window.sessionToken });
          return fetch(url, { headers })
            .then(response => response.text())
            .then(data => {
              document.getElementById("audits").innerHTML = data;

              bindAuditPagination();
            });
        };

        var stopCatalogLoaderSchedulerPooling = function() {
          if (window.schedulerPollingId !== undefined) {
            clearInterval(window.schedulerPollingId);
            window.schedulerPollingId = undefined;
          };
        };

        var startCatalogLoaderSchedulerPooling = function() {
          window.schedulerPollingId = setInterval(() => {
            getCatalogLoaderScheduler();
          }, 60000);
        }

        var postCatalogLoader = function(url) {
          var headers = new Headers({
            "Authorization": "Bearer " + window.sessionToken,
            "Content-Type": "application/json"
          });
          return fetch(url, { method: 'POST', headers })
            .then(response => response.text())
            .then(data => {
              HTMLsuccessfulMessage = "<%= j render(partial: 'catalog_loader/success') %>"
              document.getElementById("catalog_loader_msg").innerHTML = HTMLsuccessfulMessage;
              setTimeout(() => {
                document.getElementById("catalog_loader_msg").innerHTML = "";
              }, 5000);
            });
        };

        var bindCatalogLoaderSubmit = function() {
          $("#new_catalog_loader").on("submit", function(e) {
            e.preventDefault();
            e.stopPropagation();
            var url = "/catalog_loader?" + $(this).serialize();

            postCatalogLoader(url, window.sessionToken);
            stopAuditsPooling();
            startAuditsPooling();
          });
        };

        var getCatalogLoaderScheduler = function() {
          var headers = new Headers({
            "Authorization": "Bearer " + window.sessionToken,
            "Content-Type": "application/json"
          });
          var url = "/catalog_loader_scheduler";
          return fetch(url, { method: 'GET', headers })
            .then(response => response.text())
            .then(data => {
              document.getElementById("catalog_loader_scheduler").innerHTML = data;
              bindCatalogLoaderSchedulerSubmit();
            });
        };

        var bindCatalogLoaderSchedulerSubmit = function() {
          $("#new_catalog_loader_scheduler").on("submit", function(e) {
            e.preventDefault();
            e.stopPropagation();
            var url = "/catalog_loader_scheduler?" + $(this).serialize();

            postCatalogLoaderScheduler(url, window.sessionToken);
            stopAuditsPooling();
            startAuditsPooling();
          });
        };

        var getCatalogLoaderSchedulerPromise = new Promise(getCatalogLoaderScheduler, function() {});

        var postCatalogLoaderScheduler = function(url) {
          var headers = new Headers({
            "Authorization": "Bearer " + window.sessionToken,
            "Content-Type": "application/json"
          });
          return fetch(url, { method: 'POST', headers })
            .then(response => response.text())
            .then(data => { getCatalogLoaderSchedulerPromise; })
            .then( _ => {
              HTMLsuccessfulMessage = "<%= j render(partial: 'catalog_loader_scheduler/success') %>"
              document.getElementById("catalog_loader_scheduler_msg").innerHTML = HTMLsuccessfulMessage;
              setTimeout(() => {
                document.getElementById("catalog_loader_scheduler_msg").innerHTML = "";
              }, 5000);
            });
        };

        fetchAudits();
        startAuditsPooling();
        bindAuditsFilterSubmit();
        bindCatalogLoaderSubmit();
        getCatalogLoaderScheduler();
        startCatalogLoaderSchedulerPooling();
      }, { once: true });
    </script>
  </head>
  <body>
    <div class="container-lg">
      <div class="m-1 p-1 main-card">
        <div class="d-flex flex-row bd-highlight p-3 align-items-center justify-content-center">
          <div class="p-2 bd-highlight"><%= image_tag "logo.png", size: 90 %></div>
          <div class="p-2 bd-highlight">
            <h1 class="title-font m-0">HerboMadrid</h1>
            <h3 class="title-font secondary-font-color m-0">Fulfillment service manager</h3>
          </div>
        </div>

        <%= render partial: "catalog_loader/new" %>

        <div id="catalog_loader_scheduler">
          <div class="card mb-3">
            <div class="card-body pb-4">
              <div class="d-flex flex-row justify-content-center bd-highlight pt-3 pb-3 align-items-center">
                <div class="bd-highlight text-center">
                  <%= image_tag "loading.gif", size: 60 %>
                  <h6 class="title-font m-0">loading</h6>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="card mb-3">
          <div class="card-body pb-4">
            <div class="d-flex flex-row bd-highlight">
              <div class="bd-highlight"><%= image_tag "log-icon.png", size: 60 %></div>
              <div class="bd-highlight">
                <h3 class="title-font m-0">Audit</h3>
                <h5 class="title-font secondary-font-color m-0">
                  Check all the actions done by the application
                </h5>
              </div>
            </div>
            <hr/>
            <div class="container-xxl pt-4">
              <div class="d-flex flex-column bd-highlight">
                <div class="bd-highlight">
                  <%= render partial: "audits/filter" %>
                </div>
                <div class="bd-highlight text-center" id="audits">
                  <%= image_tag "loading.gif", size: 60 %>
                  <h6 class="title-font m-0">loading</h6>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
